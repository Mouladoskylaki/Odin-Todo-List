{"version":3,"file":"main.js","mappings":"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","sources":["webpack://webpack_template/./src/styles/styles.css","webpack://webpack_template/./node_modules/css-loader/dist/runtime/api.js","webpack://webpack_template/./node_modules/css-loader/dist/runtime/getUrl.js","webpack://webpack_template/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://webpack_template/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://webpack_template/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://webpack_template/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://webpack_template/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://webpack_template/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://webpack_template/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://webpack_template/webpack/bootstrap","webpack://webpack_template/webpack/runtime/compat get default export","webpack://webpack_template/webpack/runtime/define property getters","webpack://webpack_template/webpack/runtime/global","webpack://webpack_template/webpack/runtime/hasOwnProperty shorthand","webpack://webpack_template/webpack/runtime/publicPath","webpack://webpack_template/webpack/runtime/jsonp chunk loading","webpack://webpack_template/webpack/runtime/nonce","webpack://webpack_template/./src/styles/styles.css?e45b","webpack://webpack_template/./src/state.js","webpack://webpack_template/./src/pubsub.js","webpack://webpack_template/./node_modules/date-fns/locale/en-US/_lib/formatDistance.js","webpack://webpack_template/./node_modules/date-fns/locale/_lib/buildFormatLongFn.js","webpack://webpack_template/./node_modules/date-fns/locale/en-US/_lib/formatLong.js","webpack://webpack_template/./node_modules/date-fns/locale/en-US/_lib/formatRelative.js","webpack://webpack_template/./node_modules/date-fns/locale/_lib/buildLocalizeFn.js","webpack://webpack_template/./node_modules/date-fns/locale/en-US/_lib/localize.js","webpack://webpack_template/./node_modules/date-fns/locale/_lib/buildMatchFn.js","webpack://webpack_template/./node_modules/date-fns/locale/en-US/_lib/match.js","webpack://webpack_template/./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js","webpack://webpack_template/./node_modules/date-fns/locale/en-US.js","webpack://webpack_template/./node_modules/date-fns/_lib/defaultOptions.js","webpack://webpack_template/./node_modules/date-fns/constants.js","webpack://webpack_template/./node_modules/date-fns/constructFrom.js","webpack://webpack_template/./node_modules/date-fns/toDate.js","webpack://webpack_template/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js","webpack://webpack_template/./node_modules/date-fns/startOfDay.js","webpack://webpack_template/./node_modules/date-fns/getDayOfYear.js","webpack://webpack_template/./node_modules/date-fns/differenceInCalendarDays.js","webpack://webpack_template/./node_modules/date-fns/_lib/normalizeDates.js","webpack://webpack_template/./node_modules/date-fns/startOfYear.js","webpack://webpack_template/./node_modules/date-fns/startOfWeek.js","webpack://webpack_template/./node_modules/date-fns/startOfISOWeek.js","webpack://webpack_template/./node_modules/date-fns/getISOWeekYear.js","webpack://webpack_template/./node_modules/date-fns/getISOWeek.js","webpack://webpack_template/./node_modules/date-fns/startOfISOWeekYear.js","webpack://webpack_template/./node_modules/date-fns/getWeekYear.js","webpack://webpack_template/./node_modules/date-fns/getWeek.js","webpack://webpack_template/./node_modules/date-fns/startOfWeekYear.js","webpack://webpack_template/./node_modules/date-fns/_lib/addLeadingZeros.js","webpack://webpack_template/./node_modules/date-fns/_lib/format/lightFormatters.js","webpack://webpack_template/./node_modules/date-fns/_lib/format/formatters.js","webpack://webpack_template/./node_modules/date-fns/_lib/format/longFormatters.js","webpack://webpack_template/./node_modules/date-fns/_lib/protectedTokens.js","webpack://webpack_template/./node_modules/date-fns/isValid.js","webpack://webpack_template/./node_modules/date-fns/isDate.js","webpack://webpack_template/./node_modules/date-fns/format.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/Setter.js","webpack://webpack_template/./node_modules/date-fns/transpose.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/Parser.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/constants.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/utils.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/parsers/DateParser.js","webpack://webpack_template/./node_modules/date-fns/addDays.js","webpack://webpack_template/./node_modules/date-fns/setDay.js","webpack://webpack_template/./node_modules/date-fns/setISODay.js","webpack://webpack_template/./node_modules/date-fns/getISODay.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/parsers.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/parsers/EraParser.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/parsers/YearParser.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/parsers/LocalWeekYearParser.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/parsers/ISOWeekYearParser.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/parsers/ExtendedYearParser.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/parsers/QuarterParser.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/parsers/StandAloneQuarterParser.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/parsers/MonthParser.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/parsers/StandAloneMonthParser.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/parsers/LocalWeekParser.js","webpack://webpack_template/./node_modules/date-fns/setWeek.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/parsers/ISOWeekParser.js","webpack://webpack_template/./node_modules/date-fns/setISOWeek.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/parsers/DayOfYearParser.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/parsers/DayParser.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/parsers/LocalDayParser.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/parsers/StandAloneLocalDayParser.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/parsers/ISODayParser.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/parsers/AMPMParser.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/parsers/AMPMMidnightParser.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/parsers/DayPeriodParser.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/parsers/Hour1to12Parser.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/parsers/Hour0to23Parser.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/parsers/Hour0To11Parser.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/parsers/Hour1To24Parser.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/parsers/MinuteParser.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/parsers/SecondParser.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/parsers/FractionOfSecondParser.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/parsers/ISOTimezoneWithZParser.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/parsers/ISOTimezoneParser.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/parsers/TimestampSecondsParser.js","webpack://webpack_template/./node_modules/date-fns/parse/_lib/parsers/TimestampMillisecondsParser.js","webpack://webpack_template/./node_modules/date-fns/parse.js","webpack://webpack_template/./node_modules/date-fns/getDefaultOptions.js","webpack://webpack_template/./src/domUtils.js","webpack://webpack_template/./src/utils.js","webpack://webpack_template/./src/UI.js","webpack://webpack_template/./src/projects.js","webpack://webpack_template/./src/formValidation.js","webpack://webpack_template/./src/todos.js","webpack://webpack_template/./src/index.js","webpack://webpack_template/./src/localStorageManager.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"/src/fonts/Norse-Bold.otf\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(\"/src/images/background.jpg\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* styles.css */\n* {\n    font-family: 'odin';\n    font-size: 1.03rem;\n}\n\n@font-face {\n    font-family: 'odin';\n    src: url(${___CSS_LOADER_URL_REPLACEMENT_0___});\n}\n\nbody {\n    margin: 0;\n    color: white;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    \n}\n\nbody::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    background-image: url(${___CSS_LOADER_URL_REPLACEMENT_1___});\n    background-size: cover;\n    filter: grayscale(100%) brightness(70%);\n    background-position: center;\n    z-index: -1;\n}\n\n.container {\n    position: relative;\n    z-index: 1;\n}\n\n.main-container {\n    background-color: rgb(145, 145, 147);\n    width: 80vw;\n    height: 90vh;\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    grid-template-rows: repeat(3, 1fr);\n    overflow-y: auto;\n    border: 0.7rem solid black;\n    border-radius: 0.5rem;\n    box-shadow: 0 0 0.5rem 0.1rem rgb(34, 33, 33);\n}\n\n.task-form-div {\n    grid-column: 1 / 3;\n    grid-row: 1 / 2;\n    display: grid;\n    justify-self: center;\n    align-self: stretch;\n    grid-template-columns: 1fr 1fr;\n    width: 100%;\n    padding: 0.5;\n}\n\n.task-form {\n    display: grid;\n    height: 13rem;\n    margin-top: 0.3rem;\n    margin-left: 0.3rem;\n    box-shadow: 10px 10px 15px rgba(0, 0, 0, 0.3);\n}\n\n.odin-lined {\n    height: 14vw;\n    justify-self: center;\n    align-self: center;\n}\n\n.logo {\n    display: grid;\n    grid-template-columns: auto 1fr;\n    align-items: center;\n    justify-items: center;\n    justify-self: center;\n}\n\n.text {\n    display: grid;\n    align-self: center;\n    justify-items: start;\n}\n\n.task-form-text {\n    margin: 0px;\n    font-family: 'odin';\n    font-size: 4.6vw;\n    font-weight: bold;\n    white-space: nowrap;\n}\n\n.task-form-text2 {\n    margin: 0px;\n    font-family: 'odin';\n    font-size: 3vw;\n}\n\n\n\n.display-projects {\n    background-color: rgb(44, 44, 45);\n    border-top: 0.4rem solid rgb(0, 0, 0);\n    margin-top: 0.5rem;\n    grid-row: 2 / 4;\n    grid-column: 1 / 3;\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n    grid-template-rows: repeat(4, 1fr);\n}\n\n.new-project-form {\n    align-self: center;\n    margin-bottom: 0.2rem;\n    grid-column: 1 / 2;\n    grid-row: 1 / 2;\n    display: grid;\n    align-items: center;\n    justify-items: center;\n    grid-template-rows: 1fr 1fr;\n}\n\n.new-project-input {\n    width: 90%;\n    align-self: end;\n    margin-bottom: 0.3rem;\n}\n\n.new-project {\n    align-self: start;\n}\n\n.project-list {\n    grid-column: 1 / 2;\n    grid-row: 2 / 5;\n    display: grid;\n    justify-items: start;\n    align-items: center;\n    align-content: start;\n    overflow-y: auto;\n}\n\n.project-element {\n    display: grid;\n    grid-template-columns: auto repeat(2, 1fr);\n    gap: 0.1rem;\n    padding: 0.2vw;\n    margin-bottom: 0.4rem;\n    margin-left: 0.2rem;\n    margin-right: 0.2rem;\n    background-color: rgb(145, 145, 147);\n    border-radius: 0.2rem;\n    white-space: nowrap;\n}\n\n.deleteProjectBtn, .sortBtn {\n    height: 1rem;\n    font-size: 0.6rem;\n    padding: 0.2rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.default-project {\n    font-family: 'odin';\n    border-left: 0.3rem solid black;\n    grid-column: 2 / 6;\n    grid-row: 1 / 5;\n    display: grid;\n    grid-template-rows: repeat(3, 1fr);\n    grid-template-columns: repeat(3, 1fr);\n    grid-auto-rows: 1fr;\n    grid-auto-flow: row;\n    overflow-y: auto;\n    justify-items: center;\n    align-items: center;\n    font-size: 2rem;\n    text-shadow: 5px 5px 15px rgba(0, 0, 0, 0.5);\n      \n}\n/* .newTodo Grid */\n.newTodo {\n    font-size: 1rem;\n    color: white;\n    justify-self: center; /* Align horizontally (start, center, end, stretch) */\n    align-self: center;\n    padding-top: 0.3rem;\n    padding-bottom: 0.3rem;\n    padding-left: 0.2rem;\n    /* padding-right: 3.2rem; */\n    width: 13rem;\n    max-width: 15rem;\n    height: 6.5rem;\n    margin: 7px;\n    box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.3);\n    border-radius: 0.1rem;\n    border: 1px solid rgb(145, 145, 147);\n    overflow-y: auto;\n    display: grid;\n    grid-auto-rows: min-content;\n    grid-template-columns: repeat(4, auto);\n    align-content: start;\n    justify-content: start;\n}\n\n.addToProjectBtn {\n    height: 1rem;\n    font-size: 0.8rem;\n    grid-column: 2 / 3;\n    grid-row: 1 / 2;\n}\n\n.deleteTodoBtn {\n    height: 1rem;\n    font-size: 0.8rem;\n    margin-left: 0.2rem;\n    grid-column: 1 / 2;\n    grid-row: 1 / 2;\n    margin-right: 0.5rem;\n}\n\n.selectProjectList {\n    height: 1rem;\n    font-size: 0.8rem;\n    grid-column: 3 / 4;\n    grid-row: 1 / 2;\n    margin-right: 0.5rem;\n    width: 3.7rem;\n}\n\n.completedCheckbox {\n    vertical-align: middle;\n    grid-column: 4 / 5;\n    grid-row: 1 / 2;\n}\n\n.title {\n    width: 11.5rem;\n    margin-left: 0.2rem;\n    grid-column: 1 / 5;\n    grid-row: 2 / 3;\n}\n.title::before {\n    content: attr(data-text);\n    color: red;\n}\n\n.dueDate {\n    margin-left: 0.2rem;\n    grid-column: 1 / 5;\n    grid-row: 3 / 4;\n}\n\n.description {\n    margin-left: 0.2rem;\n    grid-column: 1 / 5;\n    grid-row: 5 / 6;\n    width: 11.5rem;\n    height: auto;\n\n}\n\n.priority {\n    margin-left: 0.2rem;\n    grid-column: 1 / 5;\n    grid-row: 6 / 7;\n}\n\n.expandBtn {\n    background: transparent;\n    border: none;\n    box-shadow: none;\n    padding: 0;\n    margin: 0;\n    cursor: pointer;\n    margin-left: 0.2rem;\n    grid-column: 1 / 2;\n    grid-row: 4 / 5;\n    justify-self: start;\n}\n\ninput {\n    border-radius: 0.2rem;\n    margin-bottom: 0.2rem;\n    border: 1px solid black;\n    box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.3);\n}\n\nh2 {\n    margin-bottom: 0.2rem;\n}\n\nbutton {\n    box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.3);\n\n}\n\n.project-element:hover {\n    cursor: pointer;\n}\n\n#footer {\n    margin-top: 0.2rem;\n    margin-bottom: -0.8rem;\n}\n.pulse-heart {\n    display: inline-block;\n    animation: pulse 1.5s infinite;\n}\n\n@keyframes pulse {\n    0% {\n        transform: scale(0.8);\n    }\n    50% {\n        transform: scale(1);\n    }\n    100% {\n        transform: scale(0.8);\n    }\n}\n\n.devil {\n    animation: dev 1s infinite;\n    z-index: 1;\n    position: absolute;\n    top: 1rem;\n    color: red;\n    height: 40rem;\n\n}\n\n@keyframes dev {\n    0% {\n        transform: scale(0.1);\n    }\n    50% {\n        transform: scale(0.5);\n    }\n    100% {\n        transform: scale(1);\n    }\n}\n\n\n\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/styles.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/* styles.css */\\n* {\\n    font-family: 'odin';\\n    font-size: 1.03rem;\\n}\\n\\n@font-face {\\n    font-family: 'odin';\\n    src: url('/src/fonts/Norse-Bold.otf');\\n}\\n\\nbody {\\n    margin: 0;\\n    color: white;\\n    height: 100vh;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    \\n}\\n\\nbody::before {\\n    content: '';\\n    position: absolute;\\n    top: 0;\\n    bottom: 0;\\n    width: 100%;\\n    height: 100%;\\n    background-image: url('/src/images/background.jpg');\\n    background-size: cover;\\n    filter: grayscale(100%) brightness(70%);\\n    background-position: center;\\n    z-index: -1;\\n}\\n\\n.container {\\n    position: relative;\\n    z-index: 1;\\n}\\n\\n.main-container {\\n    background-color: rgb(145, 145, 147);\\n    width: 80vw;\\n    height: 90vh;\\n    display: grid;\\n    grid-template-columns: repeat(2, 1fr);\\n    grid-template-rows: repeat(3, 1fr);\\n    overflow-y: auto;\\n    border: 0.7rem solid black;\\n    border-radius: 0.5rem;\\n    box-shadow: 0 0 0.5rem 0.1rem rgb(34, 33, 33);\\n}\\n\\n.task-form-div {\\n    grid-column: 1 / 3;\\n    grid-row: 1 / 2;\\n    display: grid;\\n    justify-self: center;\\n    align-self: stretch;\\n    grid-template-columns: 1fr 1fr;\\n    width: 100%;\\n    padding: 0.5;\\n}\\n\\n.task-form {\\n    display: grid;\\n    height: 13rem;\\n    margin-top: 0.3rem;\\n    margin-left: 0.3rem;\\n    box-shadow: 10px 10px 15px rgba(0, 0, 0, 0.3);\\n}\\n\\n.odin-lined {\\n    height: 14vw;\\n    justify-self: center;\\n    align-self: center;\\n}\\n\\n.logo {\\n    display: grid;\\n    grid-template-columns: auto 1fr;\\n    align-items: center;\\n    justify-items: center;\\n    justify-self: center;\\n}\\n\\n.text {\\n    display: grid;\\n    align-self: center;\\n    justify-items: start;\\n}\\n\\n.task-form-text {\\n    margin: 0px;\\n    font-family: 'odin';\\n    font-size: 4.6vw;\\n    font-weight: bold;\\n    white-space: nowrap;\\n}\\n\\n.task-form-text2 {\\n    margin: 0px;\\n    font-family: 'odin';\\n    font-size: 3vw;\\n}\\n\\n\\n\\n.display-projects {\\n    background-color: rgb(44, 44, 45);\\n    border-top: 0.4rem solid rgb(0, 0, 0);\\n    margin-top: 0.5rem;\\n    grid-row: 2 / 4;\\n    grid-column: 1 / 3;\\n    display: grid;\\n    grid-template-columns: repeat(5, 1fr);\\n    grid-template-rows: repeat(4, 1fr);\\n}\\n\\n.new-project-form {\\n    align-self: center;\\n    margin-bottom: 0.2rem;\\n    grid-column: 1 / 2;\\n    grid-row: 1 / 2;\\n    display: grid;\\n    align-items: center;\\n    justify-items: center;\\n    grid-template-rows: 1fr 1fr;\\n}\\n\\n.new-project-input {\\n    width: 90%;\\n    align-self: end;\\n    margin-bottom: 0.3rem;\\n}\\n\\n.new-project {\\n    align-self: start;\\n}\\n\\n.project-list {\\n    grid-column: 1 / 2;\\n    grid-row: 2 / 5;\\n    display: grid;\\n    justify-items: start;\\n    align-items: center;\\n    align-content: start;\\n    overflow-y: auto;\\n}\\n\\n.project-element {\\n    display: grid;\\n    grid-template-columns: auto repeat(2, 1fr);\\n    gap: 0.1rem;\\n    padding: 0.2vw;\\n    margin-bottom: 0.4rem;\\n    margin-left: 0.2rem;\\n    margin-right: 0.2rem;\\n    background-color: rgb(145, 145, 147);\\n    border-radius: 0.2rem;\\n    white-space: nowrap;\\n}\\n\\n.deleteProjectBtn, .sortBtn {\\n    height: 1rem;\\n    font-size: 0.6rem;\\n    padding: 0.2rem;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n}\\n\\n.default-project {\\n    font-family: 'odin';\\n    border-left: 0.3rem solid black;\\n    grid-column: 2 / 6;\\n    grid-row: 1 / 5;\\n    display: grid;\\n    grid-template-rows: repeat(3, 1fr);\\n    grid-template-columns: repeat(3, 1fr);\\n    grid-auto-rows: 1fr;\\n    grid-auto-flow: row;\\n    overflow-y: auto;\\n    justify-items: center;\\n    align-items: center;\\n    font-size: 2rem;\\n    text-shadow: 5px 5px 15px rgba(0, 0, 0, 0.5);\\n      \\n}\\n/* .newTodo Grid */\\n.newTodo {\\n    font-size: 1rem;\\n    color: white;\\n    justify-self: center; /* Align horizontally (start, center, end, stretch) */\\n    align-self: center;\\n    padding-top: 0.3rem;\\n    padding-bottom: 0.3rem;\\n    padding-left: 0.2rem;\\n    /* padding-right: 3.2rem; */\\n    width: 13rem;\\n    max-width: 15rem;\\n    height: 6.5rem;\\n    margin: 7px;\\n    box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.3);\\n    border-radius: 0.1rem;\\n    border: 1px solid rgb(145, 145, 147);\\n    overflow-y: auto;\\n    display: grid;\\n    grid-auto-rows: min-content;\\n    grid-template-columns: repeat(4, auto);\\n    align-content: start;\\n    justify-content: start;\\n}\\n\\n.addToProjectBtn {\\n    height: 1rem;\\n    font-size: 0.8rem;\\n    grid-column: 2 / 3;\\n    grid-row: 1 / 2;\\n}\\n\\n.deleteTodoBtn {\\n    height: 1rem;\\n    font-size: 0.8rem;\\n    margin-left: 0.2rem;\\n    grid-column: 1 / 2;\\n    grid-row: 1 / 2;\\n    margin-right: 0.5rem;\\n}\\n\\n.selectProjectList {\\n    height: 1rem;\\n    font-size: 0.8rem;\\n    grid-column: 3 / 4;\\n    grid-row: 1 / 2;\\n    margin-right: 0.5rem;\\n    width: 3.7rem;\\n}\\n\\n.completedCheckbox {\\n    vertical-align: middle;\\n    grid-column: 4 / 5;\\n    grid-row: 1 / 2;\\n}\\n\\n.title {\\n    width: 11.5rem;\\n    margin-left: 0.2rem;\\n    grid-column: 1 / 5;\\n    grid-row: 2 / 3;\\n}\\n.title::before {\\n    content: attr(data-text);\\n    color: red;\\n}\\n\\n.dueDate {\\n    margin-left: 0.2rem;\\n    grid-column: 1 / 5;\\n    grid-row: 3 / 4;\\n}\\n\\n.description {\\n    margin-left: 0.2rem;\\n    grid-column: 1 / 5;\\n    grid-row: 5 / 6;\\n    width: 11.5rem;\\n    height: auto;\\n\\n}\\n\\n.priority {\\n    margin-left: 0.2rem;\\n    grid-column: 1 / 5;\\n    grid-row: 6 / 7;\\n}\\n\\n.expandBtn {\\n    background: transparent;\\n    border: none;\\n    box-shadow: none;\\n    padding: 0;\\n    margin: 0;\\n    cursor: pointer;\\n    margin-left: 0.2rem;\\n    grid-column: 1 / 2;\\n    grid-row: 4 / 5;\\n    justify-self: start;\\n}\\n\\ninput {\\n    border-radius: 0.2rem;\\n    margin-bottom: 0.2rem;\\n    border: 1px solid black;\\n    box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.3);\\n}\\n\\nh2 {\\n    margin-bottom: 0.2rem;\\n}\\n\\nbutton {\\n    box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.3);\\n\\n}\\n\\n.project-element:hover {\\n    cursor: pointer;\\n}\\n\\n#footer {\\n    margin-top: 0.2rem;\\n    margin-bottom: -0.8rem;\\n}\\n.pulse-heart {\\n    display: inline-block;\\n    animation: pulse 1.5s infinite;\\n}\\n\\n@keyframes pulse {\\n    0% {\\n        transform: scale(0.8);\\n    }\\n    50% {\\n        transform: scale(1);\\n    }\\n    100% {\\n        transform: scale(0.8);\\n    }\\n}\\n\\n.devil {\\n    animation: dev 1s infinite;\\n    z-index: 1;\\n    position: absolute;\\n    top: 1rem;\\n    color: red;\\n    height: 40rem;\\n\\n}\\n\\n@keyframes dev {\\n    0% {\\n        transform: scale(0.1);\\n    }\\n    50% {\\n        transform: scale(0.5);\\n    }\\n    100% {\\n        transform: scale(1);\\n    }\\n}\\n\\n\\n\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n  url = String(url.__esModule ? url.default : url);\n\n  // If url is already wrapped in quotes, remove them\n  if (/^['\"].*['\"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n  if (options.hash) {\n    url += options.hash;\n  }\n\n  // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n  if (/[\"'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n  return url;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","__webpack_require__.nc = undefined;","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./styles.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./styles.css\";\n       export default content && content.locals ? content.locals : undefined;\n","// state.js\nexport const state = {\n\n    projects: [\n        { name: \"Default\", todos: [] }\n    ],\n}","export const pubSub = {\n    events: {},\n\n    subscribe(event, callback) {\n        if (!this.events[event]) {\n            this.events[event] = []; \n        }\n\n        this.events[event].push(callback);\n    },\n\n    publish(event, data) {\n        if (this.events[event]) {\n            this.events[event].forEach((callback) => {\n                callback(data);\n            });\n        }\n    }\n};","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-US/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n","import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"../toDate.js\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfDay} function options.\n */\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.js\";\nimport { startOfYear } from \"./startOfYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDayOfYear} function options.\n */\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { millisecondsInDay } from \"./constants.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link differenceInCalendarDays} function options.\n */\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - The options object\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const laterStartOfDay = startOfDay(laterDate_);\n  const earlierStartOfDay = startOfDay(earlierDate_);\n\n  const laterTimestamp =\n    +laterStartOfDay - getTimezoneOffsetInMilliseconds(laterStartOfDay);\n  const earlierTimestamp =\n    +earlierStartOfDay - getTimezoneOffsetInMilliseconds(earlierStartOfDay);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { constructFrom } from \"../constructFrom.js\";\n\nexport function normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfYear} function options.\n */\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date, options) {\n  const date_ = toDate(date, options?.in);\n  date_.setFullYear(date_.getFullYear(), 0, 1);\n  date_.setHours(0, 0, 0, 0);\n  return date_;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfISOWeek} function options.\n */\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date, options) {\n  return startOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeekYear} function options.\n */\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeek} function options.\n */\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { getISOWeekYear } from \"./getISOWeekYear.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\n\n/**\n * The {@link startOfISOWeekYear} function options.\n */\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date, options) {\n  const year = getISOWeekYear(date, options);\n  const fourthOfJanuary = constructFrom(options?.in || date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(options?.in || date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(options?.in || date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (+_date >= +startOfNextYear) {\n    return year + 1;\n  } else if (+_date >= +startOfThisYear) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { startOfWeekYear } from \"./startOfWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\nexport function getWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getWeekYear } from \"./getWeekYear.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(options?.in || date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.js\";\nimport { getISOWeek } from \"../../getISOWeek.js\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.js\";\nimport { getWeek } from \"../../getWeek.js\";\nimport { getWeekYear } from \"../../getWeekYear.js\";\n\nimport { addLeadingZeros } from \"../addLeadingZeros.js\";\nimport { lightFormatters } from \"./lightFormatters.js\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(+date / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    return addLeadingZeros(+date, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { isDate } from \"./isDate.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertible into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  return !((!isDate(date) && typeof date !== \"number\") || isNaN(+toDate(date)));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { formatters } from \"./_lib/format/formatters.js\";\nimport { longFormatters } from \"./_lib/format/longFormatters.js\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.js\";\nimport { isValid } from \"./isValid.js\";\nimport { toDate } from \"./toDate.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date, options?.in);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import { constructFrom } from \"../../constructFrom.js\";\nimport { transpose } from \"../../transpose.js\";\n\nconst TIMEZONE_UNIT_PRIORITY = 10;\n\nexport class Setter {\n  subPriority = 0;\n\n  validate(_utcDate, _options) {\n    return true;\n  }\n}\n\nexport class ValueSetter extends Setter {\n  constructor(\n    value,\n\n    validateValue,\n\n    setValue,\n\n    priority,\n    subPriority,\n  ) {\n    super();\n    this.value = value;\n    this.validateValue = validateValue;\n    this.setValue = setValue;\n    this.priority = priority;\n    if (subPriority) {\n      this.subPriority = subPriority;\n    }\n  }\n\n  validate(date, options) {\n    return this.validateValue(date, this.value, options);\n  }\n\n  set(date, flags, options) {\n    return this.setValue(date, flags, this.value, options);\n  }\n}\n\nexport class DateTimezoneSetter extends Setter {\n  priority = TIMEZONE_UNIT_PRIORITY;\n  subPriority = -1;\n\n  constructor(context, reference) {\n    super();\n    this.context = context || ((date) => constructFrom(reference, date));\n  }\n\n  set(date, flags) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(date, transpose(date, this.context));\n  }\n}\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name transpose\n * @category Generic Helpers\n * @summary Transpose the date to the given constructor.\n *\n * @description\n * The function transposes the date to the given constructor. It helps you\n * to transpose the date in the system time zone to say `UTCDate` or any other\n * date extension.\n *\n * @typeParam InputDate - The input `Date` type derived from the passed argument.\n * @typeParam ResultDate - The result `Date` type derived from the passed constructor.\n *\n * @param date - The date to use values from\n * @param constructor - The date constructor to use\n *\n * @returns Date transposed to the given constructor\n *\n * @example\n * // Create July 10, 2022 00:00 in locale time zone\n * const date = new Date(2022, 6, 10)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0800 (Singapore Standard Time)'\n *\n * @example\n * // Transpose the date to July 10, 2022 00:00 in UTC\n * transpose(date, UTCDate)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0000 (Coordinated Universal Time)'\n */\nexport function transpose(date, constructor) {\n  const date_ = isConstructor(constructor)\n    ? new constructor(0)\n    : constructFrom(constructor, 0);\n  date_.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n  date_.setHours(\n    date.getHours(),\n    date.getMinutes(),\n    date.getSeconds(),\n    date.getMilliseconds(),\n  );\n  return date_;\n}\n\nfunction isConstructor(constructor) {\n  return (\n    typeof constructor === \"function\" &&\n    constructor.prototype?.constructor === constructor\n  );\n}\n\n// Fallback for modularized imports:\nexport default transpose;\n","import { ValueSetter } from \"./Setter.js\";\n\nexport class Parser {\n  run(dateString, token, match, options) {\n    const result = this.parse(dateString, token, match, options);\n    if (!result) {\n      return null;\n    }\n\n    return {\n      setter: new ValueSetter(\n        result.value,\n        this.validate,\n        this.set,\n        this.priority,\n        this.subPriority,\n      ),\n      rest: result.rest,\n    };\n  }\n\n  validate(_utcDate, _value, _options) {\n    return true;\n  }\n}\n","export const numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/, // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/, // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/, // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/, // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/, // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/, // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/, // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/, // 0 to 12\n  minute: /^[0-5]?\\d/, // 0 to 59\n  second: /^[0-5]?\\d/, // 0 to 59\n\n  singleDigit: /^\\d/, // 0 to 9\n  twoDigits: /^\\d{1,2}/, // 0 to 99\n  threeDigits: /^\\d{1,3}/, // 0 to 999\n  fourDigits: /^\\d{1,4}/, // 0 to 9999\n\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/, // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/, // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/, // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/, // 0 to 9999, -0 to -9999\n};\n\nexport const timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/,\n};\n","import {\n  millisecondsInHour,\n  millisecondsInMinute,\n  millisecondsInSecond,\n} from \"../../constants.js\";\n\nimport { numericPatterns } from \"./constants.js\";\n\nexport function mapValue(parseFnResult, mapFn) {\n  if (!parseFnResult) {\n    return parseFnResult;\n  }\n\n  return {\n    value: mapFn(parseFnResult.value),\n    rest: parseFnResult.rest,\n  };\n}\n\nexport function parseNumericPattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  return {\n    value: parseInt(matchResult[0], 10),\n    rest: dateString.slice(matchResult[0].length),\n  };\n}\n\nexport function parseTimezonePattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  // Input is 'Z'\n  if (matchResult[0] === \"Z\") {\n    return {\n      value: 0,\n      rest: dateString.slice(1),\n    };\n  }\n\n  const sign = matchResult[1] === \"+\" ? 1 : -1;\n  const hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  const minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  const seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n\n  return {\n    value:\n      sign *\n      (hours * millisecondsInHour +\n        minutes * millisecondsInMinute +\n        seconds * millisecondsInSecond),\n    rest: dateString.slice(matchResult[0].length),\n  };\n}\n\nexport function parseAnyDigitsSigned(dateString) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, dateString);\n}\n\nexport function parseNDigits(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, dateString);\n    default:\n      return parseNumericPattern(new RegExp(\"^\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\n\nexport function parseNDigitsSigned(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, dateString);\n    default:\n      return parseNumericPattern(new RegExp(\"^-?\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\n\nexport function dayPeriodEnumToHours(dayPeriod) {\n  switch (dayPeriod) {\n    case \"morning\":\n      return 4;\n    case \"evening\":\n      return 17;\n    case \"pm\":\n    case \"noon\":\n    case \"afternoon\":\n      return 12;\n    case \"am\":\n    case \"midnight\":\n    case \"night\":\n    default:\n      return 0;\n  }\n}\n\nexport function normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  const isCommonEra = currentYear > 0;\n  // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n  const absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n\n  let result;\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    const rangeEnd = absCurrentYear + 50;\n    const rangeEndCentury = Math.trunc(rangeEnd / 100) * 100;\n    const isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nexport function isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport {\n  isLeapYearIndex,\n  parseNDigits,\n  parseNumericPattern,\n} from \"../utils.js\";\n\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst DAYS_IN_MONTH_LEAP_YEAR = [\n  31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31,\n];\n\n// Day of the month\nexport class DateParser extends Parser {\n  priority = 90;\n  subPriority = 1;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"d\":\n        return parseNumericPattern(numericPatterns.date, dateString);\n      case \"do\":\n        return match.ordinalNumber(dateString, { unit: \"date\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    const month = date.getMonth();\n    if (isLeapYear) {\n      return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n    } else {\n      return value >= 1 && value <= DAYS_IN_MONTH[month];\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setDate(value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link addDays} function options.\n */\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n * @param options - An object with options\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport function addDays(date, amount, options) {\n  const _date = toDate(date, options?.in);\n  if (isNaN(amount)) return constructFrom(options?.in || date, NaN);\n\n  // If 0 days, no-op to avoid changing times in the hour before end of DST\n  if (!amount) return _date;\n\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { addDays } from \"./addDays.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link setDay} function options.\n */\n\n/**\n * @name setDay\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param day - The day of the week of the new date\n * @param options - An object with options.\n *\n * @returns The new date with the day of the week set\n *\n * @example\n * // Set week day to Sunday, with the default weekStartsOn of Sunday:\n * const result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // Set week day to Sunday, with a weekStartsOn of Monday:\n * const result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport function setDay(date, day, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const date_ = toDate(date, options?.in);\n  const currentDay = date_.getDay();\n\n  const remainder = day % 7;\n  const dayIndex = (remainder + 7) % 7;\n\n  const delta = 7 - weekStartsOn;\n  const diff =\n    day < 0 || day > 6\n      ? day - ((currentDay + delta) % 7)\n      : ((dayIndex + delta) % 7) - ((currentDay + delta) % 7);\n  return addDays(date_, diff, options);\n}\n\n// Fallback for modularized imports:\nexport default setDay;\n","import { addDays } from \"./addDays.js\";\nimport { getISODay } from \"./getISODay.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link setISODay} function options.\n */\n\n/**\n * @name setISODay\n * @category Weekday Helpers\n * @summary Set the day of the ISO week to the given date.\n *\n * @description\n * Set the day of the ISO week to the given date.\n * ISO week starts with Monday.\n * 7 is the index of Sunday, 1 is the index of Monday, etc.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param day - The day of the ISO week of the new date\n * @param options - An object with options\n *\n * @returns The new date with the day of the ISO week set\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * const result = setISODay(new Date(2014, 8, 1), 7)\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport function setISODay(date, day, options) {\n  const date_ = toDate(date, options?.in);\n  const currentDay = getISODay(date_, options);\n  const diff = day - currentDay;\n  return addDays(date_, diff, options);\n}\n\n// Fallback for modularized imports:\nexport default setISODay;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISODay} function options.\n */\n\n/**\n * @name getISODay\n * @category Weekday Helpers\n * @summary Get the day of the ISO week of the given date.\n *\n * @description\n * Get the day of the ISO week of the given date,\n * which is 7 for Sunday, 1 for Monday etc.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The day of ISO week\n *\n * @example\n * // Which day of the ISO week is 26 February 2012?\n * const result = getISODay(new Date(2012, 1, 26))\n * //=> 7\n */\nexport function getISODay(date, options) {\n  const day = toDate(date, options?.in).getDay();\n  return day === 0 ? 7 : day;\n}\n\n// Fallback for modularized imports:\nexport default getISODay;\n","import { EraParser } from \"./parsers/EraParser.js\";\nimport { YearParser } from \"./parsers/YearParser.js\";\nimport { LocalWeekYearParser } from \"./parsers/LocalWeekYearParser.js\";\nimport { ISOWeekYearParser } from \"./parsers/ISOWeekYearParser.js\";\nimport { ExtendedYearParser } from \"./parsers/ExtendedYearParser.js\";\nimport { QuarterParser } from \"./parsers/QuarterParser.js\";\nimport { StandAloneQuarterParser } from \"./parsers/StandAloneQuarterParser.js\";\nimport { MonthParser } from \"./parsers/MonthParser.js\";\nimport { StandAloneMonthParser } from \"./parsers/StandAloneMonthParser.js\";\nimport { LocalWeekParser } from \"./parsers/LocalWeekParser.js\";\nimport { ISOWeekParser } from \"./parsers/ISOWeekParser.js\";\nimport { DateParser } from \"./parsers/DateParser.js\";\nimport { DayOfYearParser } from \"./parsers/DayOfYearParser.js\";\nimport { DayParser } from \"./parsers/DayParser.js\";\nimport { LocalDayParser } from \"./parsers/LocalDayParser.js\";\nimport { StandAloneLocalDayParser } from \"./parsers/StandAloneLocalDayParser.js\";\nimport { ISODayParser } from \"./parsers/ISODayParser.js\";\nimport { AMPMParser } from \"./parsers/AMPMParser.js\";\nimport { AMPMMidnightParser } from \"./parsers/AMPMMidnightParser.js\";\nimport { DayPeriodParser } from \"./parsers/DayPeriodParser.js\";\nimport { Hour1to12Parser } from \"./parsers/Hour1to12Parser.js\";\nimport { Hour0to23Parser } from \"./parsers/Hour0to23Parser.js\";\nimport { Hour0To11Parser } from \"./parsers/Hour0To11Parser.js\";\nimport { Hour1To24Parser } from \"./parsers/Hour1To24Parser.js\";\nimport { MinuteParser } from \"./parsers/MinuteParser.js\";\nimport { SecondParser } from \"./parsers/SecondParser.js\";\nimport { FractionOfSecondParser } from \"./parsers/FractionOfSecondParser.js\";\nimport { ISOTimezoneWithZParser } from \"./parsers/ISOTimezoneWithZParser.js\";\nimport { ISOTimezoneParser } from \"./parsers/ISOTimezoneParser.js\";\nimport { TimestampSecondsParser } from \"./parsers/TimestampSecondsParser.js\";\nimport { TimestampMillisecondsParser } from \"./parsers/TimestampMillisecondsParser.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\nexport const parsers = {\n  G: new EraParser(),\n  y: new YearParser(),\n  Y: new LocalWeekYearParser(),\n  R: new ISOWeekYearParser(),\n  u: new ExtendedYearParser(),\n  Q: new QuarterParser(),\n  q: new StandAloneQuarterParser(),\n  M: new MonthParser(),\n  L: new StandAloneMonthParser(),\n  w: new LocalWeekParser(),\n  I: new ISOWeekParser(),\n  d: new DateParser(),\n  D: new DayOfYearParser(),\n  E: new DayParser(),\n  e: new LocalDayParser(),\n  c: new StandAloneLocalDayParser(),\n  i: new ISODayParser(),\n  a: new AMPMParser(),\n  b: new AMPMMidnightParser(),\n  B: new DayPeriodParser(),\n  h: new Hour1to12Parser(),\n  H: new Hour0to23Parser(),\n  K: new Hour0To11Parser(),\n  k: new Hour1To24Parser(),\n  m: new MinuteParser(),\n  s: new SecondParser(),\n  S: new FractionOfSecondParser(),\n  X: new ISOTimezoneWithZParser(),\n  x: new ISOTimezoneParser(),\n  t: new TimestampSecondsParser(),\n  T: new TimestampMillisecondsParser(),\n};\n","import { Parser } from \"../Parser.js\";\n\nexport class EraParser extends Parser {\n  priority = 140;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return (\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n\n      // A, B\n      case \"GGGGG\":\n        return match.era(dateString, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return (\n          match.era(dateString, { width: \"wide\" }) ||\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n    }\n  }\n\n  set(date, flags, value) {\n    flags.era = value;\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"R\", \"u\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.js\";\n\n// From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n// | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n// |----------|-------|----|-------|-------|-------|\n// | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n// | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n// | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n// | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n// | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\nexport class YearParser extends Parser {\n  priority = 130;\n  incompatibleTokens = [\"Y\", \"R\", \"u\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n\n  parse(dateString, token, match) {\n    const valueCallback = (year) => ({\n      year,\n      isTwoDigitYear: token === \"yy\",\n    });\n\n    switch (token) {\n      case \"y\":\n        return mapValue(parseNDigits(4, dateString), valueCallback);\n      case \"yo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"year\",\n          }),\n          valueCallback,\n        );\n      default:\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value) {\n    const currentYear = date.getFullYear();\n\n    if (value.isTwoDigitYear) {\n      const normalizedTwoDigitYear = normalizeTwoDigitYear(\n        value.year,\n        currentYear,\n      );\n      date.setFullYear(normalizedTwoDigitYear, 0, 1);\n      date.setHours(0, 0, 0, 0);\n      return date;\n    }\n\n    const year =\n      !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setFullYear(year, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n}\n","import { getWeekYear } from \"../../../getWeekYear.js\";\n\nimport { startOfWeek } from \"../../../startOfWeek.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.js\";\n\n// Local week-numbering year\nexport class LocalWeekYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token, match) {\n    const valueCallback = (year) => ({\n      year,\n      isTwoDigitYear: token === \"YY\",\n    });\n\n    switch (token) {\n      case \"Y\":\n        return mapValue(parseNDigits(4, dateString), valueCallback);\n      case \"Yo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"year\",\n          }),\n          valueCallback,\n        );\n      default:\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value, options) {\n    const currentYear = getWeekYear(date, options);\n\n    if (value.isTwoDigitYear) {\n      const normalizedTwoDigitYear = normalizeTwoDigitYear(\n        value.year,\n        currentYear,\n      );\n      date.setFullYear(\n        normalizedTwoDigitYear,\n        0,\n        options.firstWeekContainsDate,\n      );\n      date.setHours(0, 0, 0, 0);\n      return startOfWeek(date, options);\n    }\n\n    const year =\n      !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setFullYear(year, 0, options.firstWeekContainsDate);\n    date.setHours(0, 0, 0, 0);\n    return startOfWeek(date, options);\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { startOfISOWeek } from \"../../../startOfISOWeek.js\";\nimport { constructFrom } from \"../../../constructFrom.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigitsSigned } from \"../utils.js\";\n\n// ISO week-numbering year\nexport class ISOWeekYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"R\") {\n      return parseNDigitsSigned(4, dateString);\n    }\n\n    return parseNDigitsSigned(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    const firstWeekOfYear = constructFrom(date, 0);\n    firstWeekOfYear.setFullYear(value, 0, 4);\n    firstWeekOfYear.setHours(0, 0, 0, 0);\n    return startOfISOWeek(firstWeekOfYear);\n  }\n\n  incompatibleTokens = [\n    \"G\",\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { parseNDigitsSigned } from \"../utils.js\";\n\nexport class ExtendedYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"u\") {\n      return parseNDigitsSigned(4, dateString);\n    }\n\n    return parseNDigitsSigned(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"G\", \"y\", \"Y\", \"R\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { parseNDigits } from \"../utils.js\";\n\nexport class QuarterParser extends Parser {\n  priority = 120;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n      case \"QQ\": // 01, 02, 03, 04\n        return parseNDigits(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return match.ordinalNumber(dateString, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return (\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return (\n          match.quarter(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { parseNDigits } from \"../utils.js\";\n\nexport class StandAloneQuarterParser extends Parser {\n  priority = 120;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n      case \"qq\": // 01, 02, 03, 04\n        return parseNDigits(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return match.ordinalNumber(dateString, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return (\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"standalone\",\n          })\n        );\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return (\n          match.quarter(dateString, {\n            width: \"wide\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"standalone\",\n          })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class MonthParser extends Parser {\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n\n  priority = 110;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => value - 1;\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"M\":\n        return mapValue(\n          parseNumericPattern(numericPatterns.month, dateString),\n          valueCallback,\n        );\n      // 01, 02, ..., 12\n      case \"MM\":\n        return mapValue(parseNDigits(2, dateString), valueCallback);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"month\",\n          }),\n          valueCallback,\n        );\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return (\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // J, F, ..., D\n      case \"MMMMM\":\n        return match.month(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return (\n          match.month(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(value, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class StandAloneMonthParser extends Parser {\n  priority = 110;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => value - 1;\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return mapValue(\n          parseNumericPattern(numericPatterns.month, dateString),\n          valueCallback,\n        );\n      // 01, 02, ..., 12\n      case \"LL\":\n        return mapValue(parseNDigits(2, dateString), valueCallback);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"month\",\n          }),\n          valueCallback,\n        );\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return (\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // J, F, ..., D\n      case \"LLLLL\":\n        return match.month(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return (\n          match.month(dateString, { width: \"wide\", context: \"standalone\" }) ||\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(value, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setWeek } from \"../../../setWeek.js\";\nimport { startOfWeek } from \"../../../startOfWeek.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\n// Local week of year\nexport class LocalWeekParser extends Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"w\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n      case \"wo\":\n        return match.ordinalNumber(dateString, { unit: \"week\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value, options) {\n    return startOfWeek(setWeek(date, value, options), options);\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { getWeek } from \"./getWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link setWeek} function options.\n */\n\n/**\n * @name setWeek\n * @category Week Helpers\n * @summary Set the local week to the given date.\n *\n * @description\n * Set the local week to the given date, saving the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param week - The week of the new date\n * @param options - An object with options\n *\n * @returns The new date with the local week set\n *\n * @example\n * // Set the 1st week to 2 January 2005 with default options:\n * const result = setWeek(new Date(2005, 0, 2), 1)\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // Set the 1st week to 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January:\n * const result = setWeek(new Date(2005, 0, 2), 1, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sun Jan 4 2004 00:00:00\n */\nexport function setWeek(date, week, options) {\n  const date_ = toDate(date, options?.in);\n  const diff = getWeek(date_, options) - week;\n  date_.setDate(date_.getDate() - diff * 7);\n  return toDate(date_, options?.in);\n}\n\n// Fallback for modularized imports:\nexport default setWeek;\n","import { setISOWeek } from \"../../../setISOWeek.js\";\nimport { startOfISOWeek } from \"../../../startOfISOWeek.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\n// ISO week of year\nexport class ISOWeekParser extends Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"I\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n      case \"Io\":\n        return match.ordinalNumber(dateString, { unit: \"week\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value) {\n    return startOfISOWeek(setISOWeek(date, value));\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { getISOWeek } from \"./getISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link setISOWeek} function options.\n */\n\n/**\n * @name setISOWeek\n * @category ISO Week Helpers\n * @summary Set the ISO week to the given date.\n *\n * @description\n * Set the ISO week to the given date, saving the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The `Date` type of the context function.\n *\n * @param date - The date to be changed\n * @param week - The ISO week of the new date\n * @param options - An object with options\n *\n * @returns The new date with the ISO week set\n *\n * @example\n * // Set the 53rd ISO week to 7 August 2004:\n * const result = setISOWeek(new Date(2004, 7, 7), 53)\n * //=> Sat Jan 01 2005 00:00:00\n */\nexport function setISOWeek(date, week, options) {\n  const _date = toDate(date, options?.in);\n  const diff = getISOWeek(_date, options) - week;\n  _date.setDate(_date.getDate() - diff * 7);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default setISOWeek;\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport {\n  isLeapYearIndex,\n  parseNDigits,\n  parseNumericPattern,\n} from \"../utils.js\";\n\nexport class DayOfYearParser extends Parser {\n  priority = 90;\n\n  subpriority = 1;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"D\":\n      case \"DD\":\n        return parseNumericPattern(numericPatterns.dayOfYear, dateString);\n      case \"Do\":\n        return match.ordinalNumber(dateString, { unit: \"date\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    if (isLeapYear) {\n      return value >= 1 && value <= 366;\n    } else {\n      return value >= 1 && value <= 365;\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(0, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"E\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setDay } from \"../../../setDay.js\";\nimport { Parser } from \"../Parser.js\";\n\n// Day of week\nexport class DayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // T\n      case \"EEEEE\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"D\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}\n","import { setDay } from \"../../../setDay.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits } from \"../utils.js\";\n\n// Local day of week\nexport class LocalDayParser extends Parser {\n  priority = 90;\n  parse(dateString, token, match, options) {\n    const valueCallback = (value) => {\n      // We want here floor instead of trunc, so we get -7 for value 0 instead of 0\n      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n      return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;\n    };\n\n    switch (token) {\n      // 3\n      case \"e\":\n      case \"ee\": // 03\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      // 3rd\n      case \"eo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"day\",\n          }),\n          valueCallback,\n        );\n      // Tue\n      case \"eee\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // T\n      case \"eeeee\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // Tuesday\n      case \"eeee\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"i\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setDay } from \"../../../setDay.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits } from \"../utils.js\";\n\n// Stand-alone local day of week\nexport class StandAloneLocalDayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match, options) {\n    const valueCallback = (value) => {\n      // We want here floor instead of trunc, so we get -7 for value 0 instead of 0\n      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n      return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;\n    };\n\n    switch (token) {\n      // 3\n      case \"c\":\n      case \"cc\": // 03\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      // 3rd\n      case \"co\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"day\",\n          }),\n          valueCallback,\n        );\n      // Tue\n      case \"ccc\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // T\n      case \"ccccc\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // Tuesday\n      case \"cccc\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"standalone\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"i\",\n    \"e\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setISODay } from \"../../../setISODay.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits } from \"../utils.js\";\n\n// ISO day of week\nexport class ISODayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => {\n      if (value === 0) {\n        return 7;\n      }\n      return value;\n    };\n\n    switch (token) {\n      // 2\n      case \"i\":\n      case \"ii\": // 02\n        return parseNDigits(token.length, dateString);\n      // 2nd\n      case \"io\":\n        return match.ordinalNumber(dateString, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"short\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n      // T\n      case \"iiiii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          }),\n          valueCallback,\n        );\n      // Tu\n      case \"iiiiii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"short\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n      // Tuesday\n      case \"iiii\":\n      default:\n        return mapValue(\n          match.day(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"abbreviated\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"short\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 7;\n  }\n\n  set(date, _flags, value) {\n    date = setISODay(date, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { dayPeriodEnumToHours } from \"../utils.js\";\n\nexport class AMPMParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n      case \"aaa\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"aaaaa\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"b\", \"B\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { dayPeriodEnumToHours } from \"../utils.js\";\n\nexport class AMPMMidnightParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n      case \"bbb\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"bbbbb\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"B\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { dayPeriodEnumToHours } from \"../utils.js\";\n\n// in the morning, in the afternoon, in the evening, at night\nexport class DayPeriodParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"BBBBB\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class Hour1to12Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"h\":\n        return parseNumericPattern(numericPatterns.hour12h, dateString);\n      case \"ho\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 12;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else if (!isPM && value === 12) {\n      date.setHours(0, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n    return date;\n  }\n\n  incompatibleTokens = [\"H\", \"K\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class Hour0to23Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"H\":\n        return parseNumericPattern(numericPatterns.hour23h, dateString);\n      case \"Ho\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 23;\n  }\n\n  set(date, _flags, value) {\n    date.setHours(value, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"h\", \"K\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class Hour0To11Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"K\":\n        return parseNumericPattern(numericPatterns.hour11h, dateString);\n      case \"Ko\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n    return date;\n  }\n\n  incompatibleTokens = [\"h\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class Hour1To24Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"k\":\n        return parseNumericPattern(numericPatterns.hour24h, dateString);\n      case \"ko\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 24;\n  }\n\n  set(date, _flags, value) {\n    const hours = value <= 24 ? value % 24 : value;\n    date.setHours(hours, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"h\", \"H\", \"K\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class MinuteParser extends Parser {\n  priority = 60;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"m\":\n        return parseNumericPattern(numericPatterns.minute, dateString);\n      case \"mo\":\n        return match.ordinalNumber(dateString, { unit: \"minute\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 59;\n  }\n\n  set(date, _flags, value) {\n    date.setMinutes(value, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class SecondParser extends Parser {\n  priority = 50;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"s\":\n        return parseNumericPattern(numericPatterns.second, dateString);\n      case \"so\":\n        return match.ordinalNumber(dateString, { unit: \"second\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 59;\n  }\n\n  set(date, _flags, value) {\n    date.setSeconds(value, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits } from \"../utils.js\";\n\nexport class FractionOfSecondParser extends Parser {\n  priority = 30;\n\n  parse(dateString, token) {\n    const valueCallback = (value) =>\n      Math.trunc(value * Math.pow(10, -token.length + 3));\n    return mapValue(parseNDigits(token.length, dateString), valueCallback);\n  }\n\n  set(date, _flags, value) {\n    date.setMilliseconds(value);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { constructFrom } from \"../../../constructFrom.js\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { timezonePatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseTimezonePattern } from \"../utils.js\";\n\n// Timezone (ISO-8601. +00:00 is `'Z'`)\nexport class ISOTimezoneWithZParser extends Parser {\n  priority = 10;\n\n  parse(dateString, token) {\n    switch (token) {\n      case \"X\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalMinutes,\n          dateString,\n        );\n      case \"XX\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"XXXX\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalSeconds,\n          dateString,\n        );\n      case \"XXXXX\":\n        return parseTimezonePattern(\n          timezonePatterns.extendedOptionalSeconds,\n          dateString,\n        );\n      case \"XXX\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(\n      date,\n      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value,\n    );\n  }\n\n  incompatibleTokens = [\"t\", \"T\", \"x\"];\n}\n","import { constructFrom } from \"../../../constructFrom.js\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { timezonePatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseTimezonePattern } from \"../utils.js\";\n\n// Timezone (ISO-8601)\nexport class ISOTimezoneParser extends Parser {\n  priority = 10;\n\n  parse(dateString, token) {\n    switch (token) {\n      case \"x\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalMinutes,\n          dateString,\n        );\n      case \"xx\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"xxxx\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalSeconds,\n          dateString,\n        );\n      case \"xxxxx\":\n        return parseTimezonePattern(\n          timezonePatterns.extendedOptionalSeconds,\n          dateString,\n        );\n      case \"xxx\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(\n      date,\n      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value,\n    );\n  }\n\n  incompatibleTokens = [\"t\", \"T\", \"X\"];\n}\n","import { constructFrom } from \"../../../constructFrom.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseAnyDigitsSigned } from \"../utils.js\";\n\nexport class TimestampSecondsParser extends Parser {\n  priority = 40;\n\n  parse(dateString) {\n    return parseAnyDigitsSigned(dateString);\n  }\n\n  set(date, _flags, value) {\n    return [constructFrom(date, value * 1000), { timestampIsSet: true }];\n  }\n\n  incompatibleTokens = \"*\";\n}\n","import { constructFrom } from \"../../../constructFrom.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseAnyDigitsSigned } from \"../utils.js\";\n\nexport class TimestampMillisecondsParser extends Parser {\n  priority = 20;\n\n  parse(dateString) {\n    return parseAnyDigitsSigned(dateString);\n  }\n\n  set(date, _flags, value) {\n    return [constructFrom(date, value), { timestampIsSet: true }];\n  }\n\n  incompatibleTokens = \"*\";\n}\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { longFormatters } from \"./_lib/format/longFormatters.js\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getDefaultOptions } from \"./getDefaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\nimport { DateTimezoneSetter } from \"./parse/_lib/Setter.js\";\nimport { parsers } from \"./parse/_lib/parsers.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { longFormatters, parsers };\n\n/**\n * The {@link parse} function options.\n */\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\n\nconst notWhitespaceRegExp = /\\S/;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 001, ..., 999                |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangeably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear](https://date-fns.org/docs/setISOWeekYear)\n *    and [setWeekYear](https://date-fns.org/docs/setWeekYear)).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 7. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param dateStr - The string to parse\n * @param formatStr - The string of tokens\n * @param referenceDate - defines values missing from the parsed dateString\n * @param options - An object with options.\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @returns The parsed date\n *\n * @throws `options.locale` must contain `match` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\nexport function parse(dateStr, formatStr, referenceDate, options) {\n  const invalidDate = () => constructFrom(options?.in || referenceDate, NaN);\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  if (!formatStr)\n    return dateStr ? invalidDate() : toDate(referenceDate, options?.in);\n\n  const subFnOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  // If timezone isn't specified, it will try to use the context or\n  // the reference date and fallback to the system time zone.\n  const setters = [new DateTimezoneSetter(options?.in, referenceDate)];\n\n  const tokens = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter in longFormatters) {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp);\n\n  const usedTokens = [];\n\n  for (let token of tokens) {\n    if (\n      !options?.useAdditionalWeekYearTokens &&\n      isProtectedWeekYearToken(token)\n    ) {\n      warnOrThrowProtectedError(token, formatStr, dateStr);\n    }\n    if (\n      !options?.useAdditionalDayOfYearTokens &&\n      isProtectedDayOfYearToken(token)\n    ) {\n      warnOrThrowProtectedError(token, formatStr, dateStr);\n    }\n\n    const firstCharacter = token[0];\n    const parser = parsers[firstCharacter];\n    if (parser) {\n      const { incompatibleTokens } = parser;\n      if (Array.isArray(incompatibleTokens)) {\n        const incompatibleToken = usedTokens.find(\n          (usedToken) =>\n            incompatibleTokens.includes(usedToken.token) ||\n            usedToken.token === firstCharacter,\n        );\n        if (incompatibleToken) {\n          throw new RangeError(\n            `The format string mustn't contain \\`${incompatibleToken.fullToken}\\` and \\`${token}\\` at the same time`,\n          );\n        }\n      } else if (parser.incompatibleTokens === \"*\" && usedTokens.length > 0) {\n        throw new RangeError(\n          `The format string mustn't contain \\`${token}\\` and any other token at the same time`,\n        );\n      }\n\n      usedTokens.push({ token: firstCharacter, fullToken: token });\n\n      const parseResult = parser.run(\n        dateStr,\n        token,\n        locale.match,\n        subFnOptions,\n      );\n\n      if (!parseResult) {\n        return invalidDate();\n      }\n\n      setters.push(parseResult.setter);\n\n      dateStr = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      // Replace two single quote characters with one single quote character\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      }\n\n      // Cut token from string, or, if string doesn't match the token, return Invalid Date\n      if (dateStr.indexOf(token) === 0) {\n        dateStr = dateStr.slice(token.length);\n      } else {\n        return invalidDate();\n      }\n    }\n  }\n\n  // Check if the remaining input contains something other than whitespace\n  if (dateStr.length > 0 && notWhitespaceRegExp.test(dateStr)) {\n    return invalidDate();\n  }\n\n  const uniquePrioritySetters = setters\n    .map((setter) => setter.priority)\n    .sort((a, b) => b - a)\n    .filter((priority, index, array) => array.indexOf(priority) === index)\n    .map((priority) =>\n      setters\n        .filter((setter) => setter.priority === priority)\n        .sort((a, b) => b.subPriority - a.subPriority),\n    )\n    .map((setterArray) => setterArray[0]);\n\n  let date = toDate(referenceDate, options?.in);\n\n  if (isNaN(+date)) return invalidDate();\n\n  const flags = {};\n  for (const setter of uniquePrioritySetters) {\n    if (!setter.validate(date, subFnOptions)) {\n      return invalidDate();\n    }\n\n    const result = setter.set(date, flags, subFnOptions);\n    // Result is tuple (date, flags)\n    if (Array.isArray(result)) {\n      date = result[0];\n      Object.assign(flags, result[1]);\n      // Result is date\n    } else {\n      date = result;\n    }\n  }\n\n  return date;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default parse;\n","import { getDefaultOptions as getInternalDefaultOptions } from \"./_lib/defaultOptions.js\";\n\n/**\n * @name getDefaultOptions\n * @category Common Helpers\n * @summary Get default options.\n * @pure false\n *\n * @description\n * Returns an object that contains defaults for\n * `options.locale`, `options.weekStartsOn` and `options.firstWeekContainsDate`\n * arguments for all functions.\n *\n * You can change these with [setDefaultOptions](https://date-fns.org/docs/setDefaultOptions).\n *\n * @returns The default options\n *\n * @example\n * const result = getDefaultOptions()\n * //=> {}\n *\n * @example\n * setDefaultOptions({ weekStarsOn: 1, firstWeekContainsDate: 4 })\n * const result = getDefaultOptions()\n * //=> { weekStarsOn: 1, firstWeekContainsDate: 4 }\n */\nexport function getDefaultOptions() {\n  return Object.assign({}, getInternalDefaultOptions());\n}\n\n// Fallback for modularized imports:\nexport default getDefaultOptions;\n","// domUtils.js\nimport { state } from \"./state\";\nimport { renderTodos } from \"./UI\";\n\nexport const colorizeByProperty = (element, obj) => {\n    const priorityColors = {\n        '1': '#FF3B30',\n        '2': '#FF9500',\n        '3': '#FFCC00',\n        'completed' : '#4CAF50'\n    };\n    element.style.backgroundColor = priorityColors[obj] || 'white';\n};\n\nexport const expandTasks = (makeEditableFunction, description, priority, taskElement) => {\n\n    let expandBtn = document.createElement('button');\n    expandBtn.classList.add('expandBtn');\n    expandBtn.innerHTML = '...';\n    taskElement.appendChild(expandBtn);\n\n    let taskExpanded = false;\n    expandBtn.addEventListener('click', (event) => {\n        event.stopPropagation();\n        if (!taskExpanded) {\n        makeEditableFunction('description', description);\n        makeEditableFunction('priority', priority); \n        taskExpanded = true;\n        } else if (taskExpanded === true) {\n         const description = taskElement.querySelector('.description');\n         const priority = taskElement.querySelector('.priority');\n         taskElement.removeChild(description);\n         taskElement.removeChild(priority);\n         taskExpanded = false;\n         renderTodos();\n        }\n    });\n};\n\nexport function setCaretPosition(element, position) {\n    let range = document.createRange();\n    let selection = window.getSelection();\n    \n    range.setStart(element.childNodes[0] || element, position);\n    range.collapse(true); // Collapse to a single point (no selection)\n    \n    selection.removeAllRanges();\n    selection.addRange(range);\n    console.log('set  carret')\n}\n\n","// utils.js\n\nexport const createButton = \n(className, textContent, parent, onClick) => {\n\n    const button = document.createElement('button');\n    button.classList.add(className);\n    button.textContent = textContent;\n    parent.appendChild(button);\n    button.addEventListener('click', onClick);\n    return button;  \n};\n","// console.log('UI.js loaded');\nimport { state } from \"./state\";\nimport { pubSub } from \"./pubsub\";\nimport { deleteTodo } from \"./todos\";\nimport { addToProject } from \"./projects\";\nimport { deleteProject } from \"./projects\";\nimport { getSelectedProject } from \"./projects\";\nimport { format, parse } from \"date-fns\";\nimport { formatType } from \".\";\nimport { colorizeByProperty } from \"./domUtils\";\nimport { expandTasks } from \"./domUtils\";\nimport { createButton } from \"./utils\";\nimport { setCaretPosition } from \"./domUtils\";\n\nlet defaultProject = document.querySelector('.default-project');\nlet projectList = document.querySelector('.project-list');\n\nexport const renderTodo = (task, todoIndex, projectIndex) => {\n    let newTodo = document.createElement('div');\n    newTodo.classList.add('newTodo');\n    defaultProject.appendChild(newTodo);\n\n    // Delete task Btn\n    createButton('deleteTodoBtn', 'x', newTodo, () => {\n        deleteTodo(projectIndex, todoIndex);\n        console.log(state.projects[0]);\n    });\n    \n    // Add to Project Btn\n    createButton('addToProjectBtn', 'add to Project', newTodo, () => {\n        const selectedProjectName = selectProjectList.value;\n        addToProject(task, selectedProjectName);\n    });\n\n    // Project List\n    let selectProjectList = document.createElement('select');\n    selectProjectList.classList.add('selectProjectList');\n    newTodo.appendChild(selectProjectList);\n    state.projects.forEach((project) => {\n        let projectOption = document.createElement('option');\n        projectOption.classList.add('projectOption');\n        projectOption.value = project.name;\n        projectOption.innerHTML = project.name;\n        selectProjectList.appendChild(projectOption);\n    });\n\n    // Completed Checkbox\n    let completedCheckbox = document.createElement('input');\n    completedCheckbox.classList.add('completedCheckbox');\n    completedCheckbox.type = \"checkbox\";\n    newTodo.appendChild(completedCheckbox);\n    \n    let localStorageTask = JSON.parse(localStorage.getItem(`newTodo${task.originalIndex}`));\n    \n    if (!localStorageTask.priorityFallback) {\n        localStorageTask.priorityFallback = task.priority;\n    }\n    \n    if (localStorageTask.priority === 'completed') {\n        completedCheckbox.checked = true;\n    } else {\n        completedCheckbox.checked = false;\n    }\n\n    completedCheckbox.addEventListener('change', (event) => {\n        let priorityElem = document.querySelector('.priority');\n        if (event.target.checked) {\n            completedCheckbox.setCustomValidity('Task marked as completed');\n            completedCheckbox.reportValidity();\n            console.log('completed');\n            localStorageTask.priority = 'completed';\n            colorizeByProperty(newTodo, 'completed');\n            if (priorityElem) {\n                priorityElem.innerHTML = 'Priority: completed';\n            }\n            setTimeout(() => {\n                completedCheckbox.setCustomValidity('');\n                completedCheckbox.reportValidity();\n            }, 2300);\n        } else {\n            completedCheckbox.setCustomValidity('');\n            completedCheckbox.reportValidity();\n            console.log('not completed');\n            colorizeByProperty(newTodo, localStorageTask.priorityFallback);\n            localStorageTask.priority = localStorageTask.priorityFallback;\n            if (priorityElem) {\n                priorityElem.innerHTML = `Priority: ${localStorageTask.priorityFallback}`;\n            }\n        }\n        localStorage.setItem(`newTodo${task.originalIndex}`, JSON.stringify(localStorageTask));\n    });\n    \n    \n\n    // Make tasks editable\n    const makeEditableTasks = (property, value) => {\n        let div = document.createElement('div');\n        div.classList.add(property);\n        div.setAttribute('contenteditable', 'true');\n        div.innerHTML = `${property.charAt(0).toUpperCase() + property.slice(1)}: ${value}`;\n        newTodo.appendChild(div);\n\n        if (property === 'dueDate') {\n            div.addEventListener('click', (event) => {\n                let dateBeforeEdit = format(value, 'MMM-dd-yyyy');\n                div.innerHTML = `DueDate: `;\n                let editDate = document.createElement('input');\n                editDate.type = 'date';\n                editDate.value = dateBeforeEdit;\n                div.appendChild(editDate);\n\n                editDate.addEventListener('click', (event) => {\n                    event.stopImmediatePropagation();\n                });\n\n                editDate.addEventListener('change', () => {\n                    let newDate = format(editDate.value, 'MMM-dd-yyyy');\n                    console.log(newDate);\n                    div.innerHTML = `DueDate: ${newDate}`;\n                    task[property] = newDate;\n                    localStorageTask[property] = newDate;\n                    localStorage.setItem(`newTodo${task.originalIndex}`, JSON.stringify(localStorageTask));\n                });\n\n                editDate.addEventListener('blur', () => {\n                    div.innerHTML = `DueDate: ${dateBeforeEdit}`;\n                    task[property] = dateBeforeEdit;\n                });\n            })\n        }\n\n        div.addEventListener('keydown', (event) => {\n            if (event.key === 'Enter') {\n                event.preventDefault();\n                div.blur();\n            }\n        })\n        \n        // Prevent delete before :\n        let deletedLastChar = false;\n        div.addEventListener('input', (event) => {\n            let textContent = div.innerText;\n            let colonIndex = textContent.indexOf(':');\n            let userInput = textContent.substring(colonIndex + 2);\n            let lastChar = textContent.charAt(textContent.length - 1);\n            const caretPos = window.getSelection().getRangeAt(0).startOffset;\n            if (colonIndex === -1) {\n                div.textContent = `${property}: `;\n                setCaretPosition(div, div.innerText.length);\n                }\n            if (event.inputType === \"deleteContentBackward\") {\n                if (lastChar === \":\") {\n                    div.blur();\n                    div.textContent = `${property}:   `;\n                    deletedLastChar = true;\n                }\n            }\n            if (event.inputType === 'insertText') {\n                if (caretPos < colonIndex + 2) {\n                    div.textContent = `${property}:   `;\n                    setCaretPosition(div, div.innerText.length);\n                }\n            }\n            if (property === 'title') {\n                console.log(property);\n                console.log(userInput);\n                if (userInput.length > 50) {\n                    div.innerText = `${property}: ${userInput.substring(0)}`;\n                }\n                if (userInput === \"666\") {\n                    console.log('The number of the beast');\n                    let body = document.querySelector('.body');\n                    let devil = document.createElement('img');\n                    devil.src = 'https://cdn2.psychologytoday.com/assets/styles/manual_crop_4_3_1200x900/public/field_blog_entry_teaser_image/Devil2_0.jpg?itok=R6G-evLx';\n                    devil.classList.add('devil');\n                    body.appendChild(devil);\n                    setTimeout(() => {\n                        body.removeChild(devil);\n                    }, 3000)\n\n                }\n            }\n            if (property === 'description') {\n                console.log(property);\n                console.log(userInput);\n                if (userInput.length > 150) {\n                    div.innerText = `${property}: ${userInput.substring(0)}`;\n                }\n            }\n            if (property === 'priority') {\n                console.log(property);\n                console.log(userInput);\n                if (textContent.length > 11) {\n                    div.innerText = `${property}: 1`;\n                }\n                if (userInput > 3) {\n                    console.log(\"more than 3\");\n                    console.log(task.priority)\n                    div.innerText = `${property}: ${task.priority}`;\n                }\n                if (userInput === '0') {\n                    console.log(\"more than 3\");\n                    console.log(task.priority)\n                    div.innerText = `${property}: ${task.priority}`;\n                }\n\n            }\n        });\n\n        div.addEventListener('click', () => {\n            let textContent = div.innerText;\n            let colonIndex = textContent.indexOf(':');\n            const caretPos = window.getSelection().getRangeAt(0).startOffset;\n            if (caretPos < colonIndex + 2) {\n            setCaretPosition(div, div.innerText.length);\n            }\n  \n        });\n\n        div.addEventListener('keydown', (event) => {\n            let textContent = div.innerText;\n            let colonIndex = textContent.indexOf(':');\n            const caretPos = window.getSelection().getRangeAt(0).startOffset;\n            if (event.key === 'ArrowLeft') {\n                if (caretPos < colonIndex + 2) {\n                    setCaretPosition(div, div.innerText.length);\n                    }\n                    if (caretPos === colonIndex + 1) {\n                        setCaretPosition(div, div.innerText.length);\n                        }\n            }\n        });\n\n\n\n        div.addEventListener('blur', (event) => {\n            if (property === 'dueDate' && event.relatedTarget && event.relatedTarget.type === 'date') {\n                return;\n            }\n            if (property === 'dueDate') {\n                task[property] = value;\n                div.innerHTML = `DueDate: ${value}`;\n            } else {\n            const updatedValue = div.textContent.split(':')[1].trim();\n       \n            if (property === 'priority') {\n                colorizeByProperty(newTodo, updatedValue);\n                localStorageTask.priorityFallback = updatedValue;\n                completedCheckbox.checked = false;\n                localStorage.setItem(`newTodo${task.originalIndex}`, JSON.stringify(localStorageTask));\n            }\n                task[property] = updatedValue;\n                console.log(`Updated ${property}: ${updatedValue}`);\n                localStorageTask[property] = updatedValue;\n                localStorage.setItem(`newTodo${task.originalIndex}`, JSON.stringify(localStorageTask));\n            }\n        });\n    };\n\n    makeEditableTasks('title', task.title);\n    makeEditableTasks('dueDate', task.dueDate);\n\n    expandTasks(makeEditableTasks, task.description, localStorageTask.priority, newTodo);\n    colorizeByProperty(newTodo, task.priority);\n\n};\n\nexport const renderTodos = (projectIndex, projectName) => {\n    let { name: currentProjectName, index: currentProjectIndex} = getSelectedProject();\n    if (projectIndex) {\n        currentProjectIndex = projectIndex\n    }\n    if (projectName) {\n        currentProjectName = projectName\n    }\n\n    defaultProject.innerHTML = `\"${currentProjectName}\" project`;\n    \n    const project = state.projects[currentProjectIndex];\n\n    project.todos.forEach((todo, todoIndex) => {\n        let todoInLocal = JSON.parse(localStorage.getItem(`newTodo${todo.originalIndex}`));\n\n        if (todoInLocal) {\n            console.log('ifLocal');\n            renderTodo(todoInLocal, todoIndex, currentProjectIndex)\n        } else {\n            console.log('notLocal')\n        }\n    });\n};\n\nexport const renderProjects = (makeActive) => {\n    let sorted = false;\n    let makeActiveIndex = makeActive;\n    projectList.innerHTML = \"\";\n    state.projects.forEach((project, projectIndex) => {\n        let projectElement = document.createElement('div');\n        projectElement.classList.add('project-element');\n        let projectNameSpan = document.createElement('span');\n        projectNameSpan.classList.add('project-name');\n        projectNameSpan.textContent = project.name;\n\n        projectElement.appendChild(projectNameSpan);\n        projectList.appendChild(projectElement);\n\n        if (projectIndex === 0) {\n            projectElement.classList.add('active');\n        }\n        if (makeActiveIndex) {\n            if (makeActiveIndex === projectIndex) {\n                projectElement.classList.add('active');\n            } else {\n                projectElement.classList.remove('active');\n            }\n        }\n// Sorting\n        let sortBtn = document.createElement('button');\n        sortBtn.classList.add('sortBtn');\n        sortBtn.innerHTML = `Sort`;\n        projectElement.appendChild(sortBtn);\n\n        sortBtn.addEventListener('click', () => {\n\n            project.todos.forEach((todo, index) => {\n                todo.parsedDate = parse(todo.dueDate, formatType, new Date());\n            });\n            project.todos.sort((a, b) => a.parsedDate - b.parsedDate);\n            sorted = true;\n            sortBtn.classList.add('changed');\n            console.log(`Project \"${project.name}\" sorted by date`);\n            renderTodos();\n        })\n        // Delete Project Btn\n        createButton('deleteProjectBtn', 'x', projectElement, (event) => {\n            event.stopPropagation();\n            deleteProject(projectIndex);\n            renderProjects();\n        })\n\n        projectElement.addEventListener('click', () => {\n            document.querySelectorAll('.project-element').forEach((el) => el.classList.remove('active'));\n            projectElement.classList.add('active');\n            console.log(`Rendered project \"${project.name}\"`);\n            renderTodos(projectIndex = projectIndex, `${project.name}`);\n            \n        })\n    }\n    );\n};\n\npubSub.subscribe('newTodo', (todo) => {\n    let { index: currentProjectIndex } = getSelectedProject();\n    console.log(todo);\n    console.log(`Todo added to \"Default\" project`);\n    renderTodos(currentProjectIndex);\n    console.log(state.projects);\n});\n\npubSub.subscribe('todoDeleted', ({projectIndex, todoIndex}) => {\n    console.log(`Todo deleted from project \"${state.projects[projectIndex].name}\"`);\n    renderTodos(projectIndex);\n});\n\n","// projects.js\nimport { state } from \"./state\";\nimport { renderTodos } from \"./UI\";\nimport { renderProjects } from \"./UI\";\n\nlet newProjectInput = document.querySelector('.new-project-input');\n\nexport const newProject = () => {\n    state.projects.push({name: newProjectInput.value, todos: []});\n    let neoIndex;\n    const neoProject = state.projects.find((project, index) => {\n        if (project.name === newProjectInput.value) {\n            neoIndex = index\n        }\n    })\n    let project = document.querySelector('.project-list > .project-element:last-child');\n    project.classList.add('active');\n    newProjectInput.value = '';\n    renderTodos(neoIndex, newProjectInput.value);\n    renderProjects(neoIndex);\n}\n\nexport const addToProject = (task, selectedProjectName) => {\n    const selectedProject = state.projects.find(\n        (project) => project.name === selectedProjectName\n    );\n\n    if (selectedProject) {\n        const isDuplicate = selectedProject.todos.some((todo) =>\n            todo.title === task.title &&\n            todo.description === task.description &&\n            todo.dueDate === task.dueDate &&\n            todo.priority === task.priority\n        );\n\n        if (isDuplicate) {\n            console.log(`Task already exists in \"${selectedProject.name}\" project.`);\n            return;\n        }\n\n        selectedProject.todos.push(task);\n        console.log(`Task added to the \"${selectedProject.name}\" project.`);\n    } else {\n        console.log(`Project \"${selectedProjectName}\" not found.`);\n    }\n};\n\nexport const deleteProject = (projectIndex) => {\n    const projectName = state.projects[projectIndex].name;\n\n    if (projectName === 'Default') {\n                    console.log('Cannot delete \"Default\" project');\n                    return;\n                }\n                console.log(`Project \"${projectName}\" deleted`);\n                state.projects.splice(projectIndex, 1);          \n};\n\nexport const getSelectedProject = () => {\n    const activeElement = document.querySelector('.project-element.active .project-name');\n    let selectedProjectIndex;\n    let selectedProjectName;\n    state.projects.forEach((project, index) => {\n        if (project.name === activeElement.textContent) {\n            selectedProjectIndex = index;\n            selectedProjectName = project.name;\n        }\n    })\n    return { index: selectedProjectIndex, name: selectedProjectName };\n};","// formValidation.js\n\nexport const inputValidityListener = (input, validityState, maxInput, msg1, msg2) => {\n    \n    input.addEventListener('input', () => {\n        if (!input.value) {\n            input.setCustomValidity(`${msg1}`);\n            validityState.isValid = false;\n        }  else if (input.value.length > maxInput) {\n            input.setCustomValidity(`${msg2}`);\n            validityState.isValid = false;\n        }\n        else {\n            input.setCustomValidity('');\n            validityState.isValid = true;\n        }\n        input.reportValidity();\n    });\n};\n\nexport const dateInputValidityListener = (input, validityState, msg1) => {\n    \n    input.addEventListener('input', () => {\n        if (!input.value) {\n            input.setCustomValidity(`${msg1}`);\n            validityState.isValid = false;\n        }\n        else {\n            input.setCustomValidity('');\n            validityState.isValid = true;\n        }\n        input.reportValidity();\n    });\n};\n\nexport const priorityInputValidityListener = (input, validityState, msg1) => {\n    \n    input.addEventListener('input', () => {\n        const regex = /^[1-3]$/;\n\n        if (!regex.test(input.value)) {\n            input.setCustomValidity(`${msg1}`);\n            validityState.isValid = false;\n        } else {\n            input.setCustomValidity('');\n            validityState.isValid = true;\n        }\n\n        input.reportValidity();\n    });\n};","// console.log('Todos.js loaded');\nimport { state } from \"./state\";\nimport { pubSub } from \"./pubsub\";\nimport { getSelectedProject } from \"./projects\";\nimport { format, isValid } from \"date-fns\";\nimport { inputValidityListener } from \"./formValidation\";\nimport { dateInputValidityListener } from \"./formValidation\";\nimport { priorityInputValidityListener } from \"./formValidation\";\n\nlet titleInput = document.querySelector('.title-input');\nlet descriptionInput = document.querySelector('.description-input');\nlet dueDateInput = document.querySelector('.dueDate-input');\nlet priorityInput = document.querySelector('.priority-input');\nlet indexOfLastTodoInLocalStorage;\n\nlet inputValidityStates = {\n    titleInput: { isValid: false },\n    descriptionInput: { isValid: false },\n    dueDateInput: { isValid: false },\n    priorityInput: { isValid: false}\n}\n\nconst getTodosInLocalStorage = () => {\n    let todosInLocalStorage = [];\n    Object.keys(localStorage).forEach(key => {\n        if (key.startsWith('newTodo')) {\n            let task = JSON.parse(localStorage.getItem(key));\n            todosInLocalStorage.push(task)\n        }\n    })\n    indexOfLastTodoInLocalStorage = todosInLocalStorage.length;\n    };\n\nclass Todo {\n    constructor(title, description, dueDate, priority) {\n        getTodosInLocalStorage();\n        this.title = title;\n        this.description = description;\n        this.dueDate = dueDate;\n        this.priority = priority;\n        this.originalIndex = indexOfLastTodoInLocalStorage;\n    }\n};\n\ninputValidityListener(titleInput, inputValidityStates.titleInput, 50, 'Please enter a title.', 'Title must be 50 characters or fewer.');\ninputValidityListener(descriptionInput, inputValidityStates.descriptionInput, 'Please provide a description.', 'Description must be 150 characters or fewer.');\ndateInputValidityListener(dueDateInput, inputValidityStates.dueDateInput, 'Please select a due date to continue.');\npriorityInputValidityListener(priorityInput, inputValidityStates.priorityInput, \"Enter 1 (critical), 2 (important), or 3 (optional) only.\");\n\nexport const submitTodo = (event) => {\n    let formattedDate = dueDateInput.value ? format(dueDateInput.value, 'MMM-dd-yyyy') : '';\n    event.preventDefault();\n    if (!inputValidityStates.titleInput.isValid) {\n        titleInput.setCustomValidity('Please enter a title. Must be 50 characters or fewer.');\n        titleInput.reportValidity();\n        return;\n    }\n    \n    if (!inputValidityStates.descriptionInput.isValid) {\n        descriptionInput.setCustomValidity('Please provide a description. Must be 150 characters or fewer.');\n        descriptionInput.reportValidity();\n        return;\n    }\n\n    if (!inputValidityStates.dueDateInput.isValid) {\n        dueDateInput.setCustomValidity('Please select a due date to continue.');\n        dueDateInput.reportValidity();\n        return;\n    }\n\n    if (!inputValidityStates.priorityInput.isValid) {\n        priorityInput.setCustomValidity(\"Enter 1 (critical), 2 (important), or 3 (optional) only.\");\n        priorityInput.reportValidity();\n        return;\n    }\n\n    let newTodo = new Todo(titleInput.value, descriptionInput.value, formattedDate, priorityInput.value);\n    console.log(dueDateInput.value)\n    let { index: currentProjectIndex, name: currentProjectName } = getSelectedProject();\n    state.projects[currentProjectIndex].todos.push(newTodo);\n    if (currentProjectIndex !== 0) {\n        state.projects[0].todos.push(newTodo);\n        newTodo.addedToProject = currentProjectName;\n    }\n    localStorage.setItem(`newTodo${newTodo.originalIndex}`, JSON.stringify(newTodo));\n    pubSub.publish('newTodo', newTodo);\n\n    titleInput.value = '';\n    descriptionInput.value = '';\n    dueDateInput.value = '';\n    priorityInput.value = '';\n\n    inputValidityStates.titleInput.isValid = false;\n    inputValidityStates.descriptionInput.isValid = false;\n};\n\nexport const deleteTodo = (projectIndex, todoIndex) => {\n  let { index: currentProjectIndex, name: currentProjectName } = getSelectedProject();\n  console.log(state.projects[currentProjectIndex].todos[todoIndex].originalIndex);\n  let storedItem = JSON.parse(localStorage.getItem(`newTodo${state.projects[currentProjectIndex].todos[todoIndex].originalIndex}`))\n  let beforeTrans = storedItem.addedToProject;\n  storedItem.addedToProject = \"Default\";\n  let updatedItem = JSON.stringify(storedItem);\n  localStorage.setItem(`newTodo${state.projects[currentProjectIndex].todos[todoIndex].originalIndex}`, updatedItem);\n  if (projectIndex === 0) {\n    localStorage.removeItem(`newTodo${state.projects[0].todos[todoIndex].originalIndex}`);\n  }\n\n  state.projects[currentProjectIndex].todos.splice(todoIndex, 1);\n  pubSub.publish('todoDeleted', { projectIndex, todoIndex});\n}","// console.log('Index.js loaded');\n\nimport './styles/styles.css';\nimport { submitTodo } from './todos.js';\nimport { renderTodos } from './UI.js';\nimport { renderProjects } from './UI.js';\nimport { newProject } from './projects.js';\nimport { populateArrFromLocal } from './localStorageManager.js';\n\ndocument.getElementById('year').textContent = new Date().getFullYear();\n\nexport const formatType = 'MMM-dd-yyyy';\n\nconst submitBtn = document.querySelector('.submit-btn');\nsubmitBtn.addEventListener('click', submitTodo);\nsubmitBtn.addEventListener('keydown', (key) => {\n    if (key === 'Enter') {\n        submitTodo();\n    }\n})\n\nlet newProjectBtn = document.querySelector('.new-project');\nnewProjectBtn.addEventListener('click', newProject);\n\npopulateArrFromLocal();\nrenderProjects();\nrenderTodos();\n\n\n  ","// localStorageManager.js\n\nimport { state } from \"./state\";\n\nexport const populateArrFromLocal = (fun) => {\n    Object.keys(localStorage).forEach((key, index) => {\n     if (key.startsWith('newTodo')) {\n         console.log(key);\n         let localStorageTask = JSON.parse(localStorage.getItem(key));\n         state.projects[0].todos.push(localStorageTask);\n         state.projects[0].todos.sort((a, b) => a.originalIndex - b.originalIndex);\n         if (localStorageTask.addedToProject) {\n            if (localStorageTask.addedToProject === \"Default\") {\n                return\n            }\n            let addedToProjectIndex = localStorageTask.addedToProject;\n            console.log(addedToProjectIndex);\n            if (state.projects.some(project => project.name === localStorageTask.addedToProject)) {\n                if (undefined) {\n                    console.log('no such project');\n                }\n                state.projects.forEach((project) => {\n                    if (project.name === localStorageTask.addedToProject) {\n                        project.todos.push(localStorageTask);\n                        project.todos.sort((a, b) => a.originalIndex - b.originalIndex)\n                    }\n                })\n                return\n            } else {\n                state.projects.push({name: localStorageTask.addedToProject, todos: []});\n                state.projects.forEach((project) => {\n                    if (project.name === localStorageTask.addedToProject) {\n                        project.todos.push(localStorageTask);\n                        project.todos.sort((a, b) => a.originalIndex - b.originalIndex)\n                    }\n                })\n            }\n         }\n     }\n });\n}"],"names":["___CSS_LOADER_URL_IMPORT_0___","URL","___CSS_LOADER_URL_IMPORT_1___","___CSS_LOADER_EXPORT___","___CSS_LOADER_URL_REPLACEMENT_0___","___CSS_LOADER_URL_REPLACEMENT_1___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","url","options","String","__esModule","default","test","slice","hash","needQuotes","replace","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","Function","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","p","b","baseURI","self","href","nc","locals","state","projects","name","todos","pubSub","events","subscribe","event","callback","publish","forEach","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","width","defaultWidth","formats","formatLong","date","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","value","valuesArray","context","formattingValues","defaultFormattingWidth","values","argumentCallback","localize","ordinalNumber","dirtyNumber","_options","number","Number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","Array","isArray","array","findIndex","object","findKey","valueCallback","rest","parsePattern","parseInt","parseResult","any","enUS","code","formatDistance","token","tokenValue","addSuffix","comparison","formatRelative","_date","_baseDate","weekStartsOn","firstWeekContainsDate","defaultOptions","getDefaultOptions","Math","pow","millisecondsInWeek","constructFromSymbol","Symbol","for","constructFrom","Date","constructor","toDate","argument","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","startOfDay","in","setHours","getDayOfYear","laterDate","earlierDate","laterDate_","earlierDate_","dates","normalize","bind","find","normalizeDates","laterStartOfDay","earlierStartOfDay","laterTimestamp","earlierTimestamp","round","differenceInCalendarDays","date_","setFullYear","startOfYear","startOfWeek","locale","getDay","diff","setDate","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTime","getISOWeek","fourthOfJanuary","startOfISOWeekYear","getWeekYear","firstWeekOfNextYear","firstWeekOfThisYear","getWeek","firstWeek","startOfWeekYear","addLeadingZeros","targetLength","abs","padStart","lightFormatters","y","signedYear","M","dayPeriodEnumValue","h","H","s","S","numberOfDigits","milliseconds","trunc","formatters","G","unit","Y","signedWeekYear","weekYear","R","u","Q","ceil","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","localDayOfWeek","c","isoDayOfWeek","toLowerCase","hours","B","K","X","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","T","offset","delimiter","sign","absOffset","minutes","dateLongFormatter","pattern","timeLongFormatter","longFormatters","P","datePattern","timePattern","dateTimeFormat","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isProtectedDayOfYearToken","isProtectedWeekYearToken","warnOrThrowProtectedError","format","input","_message","subject","message","console","warn","includes","RangeError","isValid","isNaN","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","formatStr","originalDate","parts","substring","firstCharacter","longFormatter","isToken","cleanEscapedString","preprocessor","formatterOptions","part","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","formatter","matched","Setter","subPriority","validate","_utcDate","ValueSetter","validateValue","setValue","priority","super","set","flags","DateTimezoneSetter","reference","timestampIsSet","isConstructor","transpose","Parser","run","dateString","parse","setter","_value","numericPatterns","timezonePatterns","mapValue","parseFnResult","mapFn","parseNumericPattern","parseTimezonePattern","parseAnyDigitsSigned","parseNDigits","RegExp","parseNDigitsSigned","dayPeriodEnumToHours","normalizeTwoDigitYear","twoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","isLeapYearIndex","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","addDays","amount","NaN","setDay","currentDay","delta","setISODay","getISODay","parsers","incompatibleTokens","isTwoDigitYear","normalizedTwoDigitYear","_flags","firstWeekOfYear","setMonth","setWeek","setISOWeek","isLeapYear","subpriority","wholeWeekDays","floor","isPM","setMinutes","setSeconds","setMilliseconds","notWhitespaceRegExp","dateStr","referenceDate","invalidDate","assign","subFnOptions","setters","tokens","usedTokens","parser","incompatibleToken","usedToken","fullToken","indexOf","uniquePrioritySetters","sort","filter","setterArray","colorizeByProperty","backgroundColor","setCaretPosition","position","range","createRange","selection","getSelection","setStart","childNodes","collapse","removeAllRanges","addRange","log","createButton","className","textContent","parent","onClick","button","classList","add","addEventListener","defaultProject","projectList","renderTodos","projectIndex","projectName","currentProjectName","currentProjectIndex","getSelectedProject","innerHTML","todo","todoIndex","todoInLocal","localStorage","getItem","originalIndex","task","newTodo","deleteTodo","selectedProjectName","selectProjectList","addToProject","project","projectOption","completedCheckbox","type","localStorageTask","priorityFallback","checked","priorityElem","setCustomValidity","reportValidity","setTimeout","setItem","makeEditableTasks","property","div","charAt","dateBeforeEdit","editDate","stopImmediatePropagation","newDate","preventDefault","blur","deletedLastChar","innerText","colonIndex","userInput","lastChar","caretPos","getRangeAt","startOffset","inputType","body","devil","relatedTarget","updatedValue","split","trim","title","dueDate","makeEditableFunction","description","taskElement","expandBtn","taskExpanded","stopPropagation","expandTasks","renderTodo","renderProjects","makeActive","sorted","makeActiveIndex","projectElement","projectNameSpan","sortBtn","parsedDate","formatType","deleteProject","querySelectorAll","el","newProjectInput","selectedProject","some","activeElement","selectedProjectIndex","inputValidityListener","validityState","maxInput","msg1","msg2","indexOfLastTodoInLocalStorage","titleInput","descriptionInput","dueDateInput","priorityInput","inputValidityStates","Todo","todosInLocalStorage","keys","startsWith","getTodosInLocalStorage","priorityInputValidityListener","submitTodo","formattedDate","addedToProject","storedItem","updatedItem","removeItem","getElementById","submitBtn","neoIndex","addedToProjectIndex"],"sourceRoot":""}